name: release
on:
  push:
    branches:
      - main

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@master
        with:
          persist-credentials: true

      - name: Set up Node.js
        uses: actions/setup-node@master
        with:
          node-version: 'lts/*'
          check-latest: trues
          cache: 'yarn'
          always-auth: true

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --ignore-scripts --ignore-engines --pure-lockfile

      - name: Code Lint
        id: yarn-lint
        run: yarn lint

      - name: Spell Check
        id: yarn-spellcheck
        run: yarn spellcheck

      - name: Tests
        id: yarn-test
        run: yarn test

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ hashFiles('Dockerfile') }}

      - name: Get date tag
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d%H')"

      - name: Build and push Docker image (openidtest)
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            adrielcodeco/openidtest:latest
            adrielcodeco/openidtest:${{ steps.date.outputs.date }}

      - run: npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"

      - run: npm version patch
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
